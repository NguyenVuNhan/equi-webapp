{"ast":null,"code":"import _objectWithoutPropertiesLoose from '@babel/runtime/helpers/objectWithoutPropertiesLoose';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport { SVGInjector } from '@tanem/svg-injector';\nimport { func, oneOf, oneOfType, object, string, bool } from 'prop-types';\nimport { createElement, Component } from 'react'; // Hat-tip: https://github.com/developit/preact-compat/blob/master/src/index.js#L402.\n\nvar shallowDiffers = function shallowDiffers(a, b) {\n  for (var i in a) {\n    if (!(i in b)) {\n      return true;\n    }\n  }\n\n  for (var _i in b) {\n    if (a[_i] !== b[_i]) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nvar svgNamespace = 'http://www.w3.org/2000/svg';\nvar xlinkNamespace = 'http://www.w3.org/1999/xlink';\n\nvar ReactSVG = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(ReactSVG, _React$Component);\n\n  function ReactSVG() {\n    var _this;\n\n    _this = _React$Component.apply(this, arguments) || this;\n    _this.initialState = {\n      hasError: false,\n      isLoading: true\n    };\n    _this.state = _this.initialState;\n    _this._isMounted = false;\n\n    _this.refCallback = function (container) {\n      _this.container = container;\n    };\n\n    return _this;\n  }\n\n  var _proto = ReactSVG.prototype;\n\n  _proto.renderSVG = function renderSVG() {\n    var _this2 = this;\n    /* istanbul ignore else */\n\n\n    if (this.container instanceof Node) {\n      var _this$props = this.props,\n          beforeInjection = _this$props.beforeInjection,\n          evalScripts = _this$props.evalScripts,\n          renumerateIRIElements = _this$props.renumerateIRIElements,\n          src = _this$props.src,\n          useRequestCache = _this$props.useRequestCache;\n      /* eslint-disable @typescript-eslint/no-non-null-assertion */\n\n      var afterInjection = this.props.afterInjection;\n      var wrapper = this.props.wrapper;\n      /* eslint-enable @typescript-eslint/no-non-null-assertion */\n\n      var nonReactElement;\n\n      if (wrapper === 'svg') {\n        nonReactElement = document.createElementNS(svgNamespace, wrapper);\n        nonReactElement.setAttribute('xmlns', svgNamespace);\n        nonReactElement.setAttribute('xmlns:xlink', xlinkNamespace);\n      } else {\n        nonReactElement = document.createElement(wrapper);\n      }\n\n      nonReactElement.dataset.src = src;\n      this.nonReactElement = this.container.appendChild(nonReactElement);\n\n      var afterEach = function afterEach(error, svg) {\n        if (error) {\n          _this2.removeSVG();\n\n          if (!_this2._isMounted) {\n            afterInjection(error);\n            return;\n          }\n        }\n\n        _this2.nonReactElement = svg; // TODO (Tane): It'd be better to cleanly unsubscribe from SVGInjector\n        // callbacks instead of tracking a property like this.\n\n        if (_this2._isMounted) {\n          _this2.setState(function () {\n            return {\n              hasError: !!error,\n              isLoading: false\n            };\n          }, function () {\n            afterInjection(error, svg);\n          });\n        }\n      };\n\n      SVGInjector(nonReactElement, {\n        afterEach: afterEach,\n        beforeEach: beforeInjection,\n        cacheRequests: useRequestCache,\n        evalScripts: evalScripts,\n        renumerateIRIElements: renumerateIRIElements\n      });\n    }\n  };\n\n  _proto.removeSVG = function removeSVG() {\n    if (this.container instanceof Node && this.nonReactElement instanceof Node) {\n      this.container.removeChild(this.nonReactElement);\n      this.nonReactElement = null;\n    }\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    this._isMounted = true;\n    this.renderSVG();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this3 = this;\n\n    if (shallowDiffers(prevProps, this.props)) {\n      this.setState(function () {\n        return _this3.initialState;\n      }, function () {\n        _this3.removeSVG();\n\n        _this3.renderSVG();\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this._isMounted = false;\n    this.removeSVG();\n  };\n\n  _proto.render = function render() {\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    var _this$props2 = this.props;\n    _this$props2.afterInjection;\n    _this$props2.beforeInjection;\n    _this$props2.evalScripts;\n    var Fallback = _this$props2.fallback,\n        Loading = _this$props2.loading;\n    _this$props2.renumerateIRIElements;\n    _this$props2.src;\n    _this$props2.useRequestCache;\n\n    var wrapper = _this$props2.wrapper,\n        rest = _objectWithoutPropertiesLoose(_this$props2, [\"afterInjection\", \"beforeInjection\", \"evalScripts\", \"fallback\", \"loading\", \"renumerateIRIElements\", \"src\", \"useRequestCache\", \"wrapper\"]);\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n\n    var Wrapper = wrapper;\n    return /*#__PURE__*/createElement(Wrapper, Object.assign({}, rest, {\n      ref: this.refCallback\n    }, wrapper === 'svg' ? {\n      xmlns: svgNamespace,\n      xmlnsXlink: xlinkNamespace\n    } : {}), this.state.isLoading && Loading && /*#__PURE__*/createElement(Loading, null), this.state.hasError && Fallback && /*#__PURE__*/createElement(Fallback, null));\n  };\n\n  return ReactSVG;\n}(Component);\n\nReactSVG.defaultProps = {\n  afterInjection: function afterInjection() {\n    return undefined;\n  },\n  beforeInjection: function beforeInjection() {\n    return undefined;\n  },\n  evalScripts: 'never',\n  fallback: null,\n  loading: null,\n  renumerateIRIElements: true,\n  useRequestCache: true,\n  wrapper: 'div'\n};\nReactSVG.propTypes = {\n  afterInjection: func,\n  beforeInjection: func,\n  evalScripts: oneOf(['always', 'once', 'never']),\n  fallback: oneOfType([func, object, string]),\n  loading: oneOfType([func, object, string]),\n  renumerateIRIElements: bool,\n  src: string.isRequired,\n  useRequestCache: bool,\n  wrapper: oneOf(['div', 'span', 'svg'])\n};\nexport { ReactSVG };","map":{"version":3,"sources":["../compiled/shallow-differs.js","../compiled/ReactSVG.js"],"names":["shallowDiffers","i","a","b","svgNamespace","xlinkNamespace","ReactSVG","hasError","isLoading","renderSVG","beforeInjection","evalScripts","renumerateIRIElements","src","useRequestCache","afterInjection","wrapper","nonReactElement","document","afterEach","SVGInjector","beforeEach","cacheRequests","removeSVG","componentDidMount","componentDidUpdate","componentWillUnmount","render","Fallback","Loading","rest","Wrapper","ref","refCallback","xmlns","xmlnsXlink","React","fallback","loading","PropTypes"],"mappings":"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","sourcesContent":["// Hat-tip: https://github.com/developit/preact-compat/blob/master/src/index.js#L402.\nconst shallowDiffers = (a, b) => {\n    for (const i in a) {\n        if (!(i in b)) {\n            return true;\n        }\n    }\n    for (const i in b) {\n        if (a[i] !== b[i]) {\n            return true;\n        }\n    }\n    return false;\n};\nexport default shallowDiffers;\n","import { SVGInjector } from '@tanem/svg-injector';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport shallowDiffers from './shallow-differs';\nconst svgNamespace = 'http://www.w3.org/2000/svg';\nconst xlinkNamespace = 'http://www.w3.org/1999/xlink';\nexport class ReactSVG extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.initialState = {\n            hasError: false,\n            isLoading: true,\n        };\n        this.state = this.initialState;\n        this._isMounted = false;\n        this.refCallback = (container) => {\n            this.container = container;\n        };\n    }\n    renderSVG() {\n        /* istanbul ignore else */\n        if (this.container instanceof Node) {\n            const { beforeInjection, evalScripts, renumerateIRIElements, src, useRequestCache, } = this.props;\n            /* eslint-disable @typescript-eslint/no-non-null-assertion */\n            const afterInjection = this.props.afterInjection;\n            const wrapper = this.props.wrapper;\n            /* eslint-enable @typescript-eslint/no-non-null-assertion */\n            let nonReactElement;\n            if (wrapper === 'svg') {\n                nonReactElement = document.createElementNS(svgNamespace, wrapper);\n                nonReactElement.setAttribute('xmlns', svgNamespace);\n                nonReactElement.setAttribute('xmlns:xlink', xlinkNamespace);\n            }\n            else {\n                nonReactElement = document.createElement(wrapper);\n            }\n            nonReactElement.dataset.src = src;\n            this.nonReactElement = this.container.appendChild(nonReactElement);\n            const afterEach = (error, svg) => {\n                if (error) {\n                    this.removeSVG();\n                    if (!this._isMounted) {\n                        afterInjection(error);\n                        return;\n                    }\n                }\n                this.nonReactElement = svg;\n                // TODO (Tane): It'd be better to cleanly unsubscribe from SVGInjector\n                // callbacks instead of tracking a property like this.\n                if (this._isMounted) {\n                    this.setState(() => ({\n                        hasError: !!error,\n                        isLoading: false,\n                    }), () => {\n                        afterInjection(error, svg);\n                    });\n                }\n            };\n            SVGInjector(nonReactElement, {\n                afterEach,\n                beforeEach: beforeInjection,\n                cacheRequests: useRequestCache,\n                evalScripts,\n                renumerateIRIElements,\n            });\n        }\n    }\n    removeSVG() {\n        if (this.container instanceof Node &&\n            this.nonReactElement instanceof Node) {\n            this.container.removeChild(this.nonReactElement);\n            this.nonReactElement = null;\n        }\n    }\n    componentDidMount() {\n        this._isMounted = true;\n        this.renderSVG();\n    }\n    componentDidUpdate(prevProps) {\n        if (shallowDiffers(prevProps, this.props)) {\n            this.setState(() => this.initialState, () => {\n                this.removeSVG();\n                this.renderSVG();\n            });\n        }\n    }\n    componentWillUnmount() {\n        this._isMounted = false;\n        this.removeSVG();\n    }\n    render() {\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        const { afterInjection, beforeInjection, evalScripts, fallback: Fallback, loading: Loading, renumerateIRIElements, src, useRequestCache, wrapper, ...rest } = this.props;\n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const Wrapper = wrapper;\n        return (React.createElement(Wrapper, Object.assign({}, rest, { ref: this.refCallback }, (wrapper === 'svg'\n            ? {\n                xmlns: svgNamespace,\n                xmlnsXlink: xlinkNamespace,\n            }\n            : {})),\n            this.state.isLoading && Loading && React.createElement(Loading, null),\n            this.state.hasError && Fallback && React.createElement(Fallback, null)));\n    }\n}\nReactSVG.defaultProps = {\n    afterInjection: () => undefined,\n    beforeInjection: () => undefined,\n    evalScripts: 'never',\n    fallback: null,\n    loading: null,\n    renumerateIRIElements: true,\n    useRequestCache: true,\n    wrapper: 'div',\n};\nReactSVG.propTypes = {\n    afterInjection: PropTypes.func,\n    beforeInjection: PropTypes.func,\n    evalScripts: PropTypes.oneOf(['always', 'once', 'never']),\n    fallback: PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    loading: PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    renumerateIRIElements: PropTypes.bool,\n    src: PropTypes.string.isRequired,\n    useRequestCache: PropTypes.bool,\n    wrapper: PropTypes.oneOf(['div', 'span', 'svg']),\n};\n"]},"metadata":{},"sourceType":"module"}