{"ast":null,"code":"var _jsxFileName = \"D:\\\\Knowledge\\\\VIRtue\\\\Equi Repo\\\\equi-webapp\\\\src\\\\components\\\\mainMenu\\\\Menu.js\";\nimport '../../App.css';\nimport styled from 'styled-components';\nimport React, { Component } from 'react';\nimport { ReactSVG } from 'react-svg';\nimport EnergySVG from \"../../svg/Energy.svg\";\nimport Background, { CablesArea, ForCircle, Potentiometer, Button, Energy } from './items/components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Menu extends Component {\n  // handle svg file with arrows\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"equi\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"equiBackground\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"potentiometerPosition\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rectangleCable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid2x2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(ReactSVG, {\n              afterInjection: (error, svg) => {\n                if (error) {\n                  console.error(error);\n                  return;\n                }\n\n                console.log(svg);\n              },\n              beforeInjection: svg => {\n                svg.classList.add('svg-class-name');\n                svg.setAttribute('style', 'width: 300');\n              },\n              evalScripts: \"always\",\n              fallback: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Error!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 37\n              }, this),\n              loading: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Loading\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 36\n              }, this),\n              onClick: () => {\n                console.log('wrapper onClick');\n              },\n              renumerateIRIElements: false,\n              src: EnergySVG,\n              useRequestCache: false,\n              wrapper: \"div\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(ReactSVG, {\n              afterInjection: (error, svg) => {\n                if (error) {\n                  console.error(error);\n                  return;\n                }\n\n                console.log(svg);\n              },\n              beforeInjection: svg => {\n                svg.classList.add('svg-class-name');\n                svg.setAttribute('style', 'width: 300');\n              },\n              evalScripts: \"always\",\n              fallback: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Error!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 37\n              }, this),\n              loading: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Loading\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 36\n              }, this),\n              onClick: () => {\n                console.log('wrapper onClick');\n              },\n              renumerateIRIElements: false,\n              src: EnergySVG,\n              useRequestCache: false,\n              wrapper: \"div\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(ReactSVG, {\n              afterInjection: (error, svg) => {\n                if (error) {\n                  console.error(error);\n                  return;\n                }\n\n                console.log(svg);\n              },\n              beforeInjection: svg => {\n                svg.classList.add('svg-class-name');\n                svg.setAttribute('style', 'width: 300');\n              },\n              evalScripts: \"always\",\n              fallback: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Error!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 37\n              }, this),\n              loading: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Loading\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 36\n              }, this),\n              onClick: () => {\n                console.log('wrapper onClick');\n              },\n              renumerateIRIElements: false,\n              src: EnergySVG,\n              useRequestCache: false,\n              wrapper: \"div\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(ReactSVG, {\n              afterInjection: (error, svg) => {\n                if (error) {\n                  console.error(error);\n                  return;\n                }\n\n                console.log(svg);\n              },\n              beforeInjection: svg => {\n                svg.classList.add('svg-class-name');\n                svg.setAttribute('style', 'width: 300');\n              },\n              evalScripts: \"always\",\n              fallback: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Error!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 37\n              }, this),\n              loading: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Loading\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 36\n              }, this),\n              onClick: () => {\n                console.log('wrapper onClick');\n              },\n              renumerateIRIElements: false,\n              src: EnergySVG,\n              useRequestCache: false,\n              wrapper: \"div\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Menu;","map":{"version":3,"sources":["D:/Knowledge/VIRtue/Equi Repo/equi-webapp/src/components/mainMenu/Menu.js"],"names":["styled","React","Component","ReactSVG","Background","CablesArea","ForCircle","Potentiometer","Button","Energy","Menu","constructor","props","render","error","svg","console","log","classList","add","setAttribute","EnergySVG"],"mappings":"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","sourcesContent":["import '../../App.css';\r\nimport styled from 'styled-components';\r\nimport React, { Component } from 'react';\r\nimport { ReactSVG } from 'react-svg';\r\nimport EnergySVG from '../../svg/Energy.svg';\r\n\r\nimport Background, {CablesArea,ForCircle, Potentiometer, Button, Energy} from './items/components';\r\n\r\nclass Menu extends Component {\r\n  // handle svg file with arrows\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"equi\" >\r\n        <div className=\"equiBackground\">\r\n        <div className=\"potentiometerPosition\"/>\r\n        <div className=\"rectangleCable\"/>\r\n              <div className=\"grid2x2\">\r\n                    <div>\r\n                    <ReactSVG\r\n                    afterInjection={(error, svg) => {\r\n                      if (error) {\r\n                        console.error(error)\r\n                        return\r\n                      }\r\n                      console.log(svg)\r\n                    }}\r\n                    beforeInjection={(svg) => {\r\n                      svg.classList.add('svg-class-name')\r\n                      svg.setAttribute('style', 'width: 300')\r\n                     \r\n                    }}\r\n                    evalScripts=\"always\"\r\n                    fallback={() => <span>Error!</span>}\r\n                    loading={() => <span>Loading</span>}\r\n                    onClick={() => {\r\n                      console.log('wrapper onClick')\r\n                    }}\r\n                    renumerateIRIElements={false}\r\n                    src={EnergySVG}\r\n                    useRequestCache={false}\r\n                    wrapper=\"div\"/>\r\n                   </div>\r\n                   <div>\r\n                    <ReactSVG\r\n                    afterInjection={(error, svg) => {\r\n                      if (error) {\r\n                        console.error(error)\r\n                        return\r\n                      }\r\n                      console.log(svg)\r\n                    }}\r\n                    beforeInjection={(svg) => {\r\n                      svg.classList.add('svg-class-name')\r\n                      svg.setAttribute('style', 'width: 300')\r\n                   \r\n                    }}\r\n                    evalScripts=\"always\"\r\n                    fallback={() => <span>Error!</span>}\r\n                    loading={() => <span>Loading</span>}\r\n                    onClick={() => {\r\n                      console.log('wrapper onClick')\r\n                    }}\r\n                    renumerateIRIElements={false}\r\n                    src={EnergySVG}\r\n                    useRequestCache={false}\r\n                    wrapper=\"div\"/>\r\n                    </div>\r\n                    <div>\r\n                    <ReactSVG\r\n                    afterInjection={(error, svg) => {\r\n                      if (error) {\r\n                        console.error(error)\r\n                        return\r\n                      }\r\n                      console.log(svg)\r\n                    }}\r\n                    beforeInjection={(svg) => {\r\n                      svg.classList.add('svg-class-name')\r\n                      svg.setAttribute('style', 'width: 300')\r\n                      \r\n                    }}\r\n                    evalScripts=\"always\"\r\n                    fallback={() => <span>Error!</span>}\r\n                    loading={() => <span>Loading</span>}\r\n                    onClick={() => {\r\n                      console.log('wrapper onClick')\r\n                    }}\r\n                    renumerateIRIElements={false}\r\n                    src={EnergySVG}\r\n                    useRequestCache={false}\r\n                    wrapper=\"div\"/>\r\n                   </div>\r\n                  <div>\r\n                    <ReactSVG\r\n                    afterInjection={(error, svg) => {\r\n                      if (error) {\r\n                        console.error(error)\r\n                        return\r\n                      }\r\n                      console.log(svg)\r\n                    }}\r\n                    beforeInjection={(svg) => {\r\n                      svg.classList.add('svg-class-name')\r\n                      svg.setAttribute('style', 'width: 300')\r\n                      \r\n                    }}\r\n                    evalScripts=\"always\"\r\n                    fallback={() => <span>Error!</span>}\r\n                    loading={() => <span>Loading</span>}\r\n                    onClick={() => {\r\n                      console.log('wrapper onClick')\r\n                    }}\r\n                    renumerateIRIElements={false}\r\n                    src={EnergySVG}\r\n                    useRequestCache={false}\r\n                    wrapper=\"div\"/>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n           \r\n      \r\n     \r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n"]},"metadata":{},"sourceType":"module"}